references:
  c3-buld-image: &c3-buld-image
    circleci/classic:latest

version: 2
jobs:
  build:
    machine:
      # specify the version
      image: *c3-buld-image

    environment:
      IMPORT_PATH: "github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"

    dependencies:
      pre:
        - go get github.com/tools/godep

      override:
        - mkdir -p "$GOPATH/src/$IMPORT_PATH"
        - rsync -azC --delete ./ "$GOPATH/src/$IMPORT_PATH/"

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: ~/go/src/github.com/c3systems/c3
    steps:
      - go version
      - checkout

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.03.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin

      - run:
          name: Install IPFS
          command: |
            set -x
            wget https://dist.ipfs.io/go-ipfs/v0.4.14/go-ipfs_v0.4.14_linux-amd64.tar.gz -O /tmp/go-ipfs.tar.gz
            cd /tmp
            tar xvfz go-ipfs.tar.gz
            sudo cp go-ipfs/ipfs /usr/local/bin/

      - run:
          name: Run IPFS daemon
          command: |
            sudo ipfs init
            ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
            ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/9001
            ipfs daemon &

      # specify any bash command here prefixed with `run: `
      - run:
          name: Tests
          command: |
            export IP=$(ifconfig | grep inet | grep broad | awk {'print $2'})
            cat <<'EOF' | sudo tee /etc/docker/daemon.json
            {
              "insecure-registries": [
                "$IP:5000",
                "123.123.123.123:5000",
              ]
            }
            EOF
            make test

workflows:
  version: 2
  all:
    jobs:
      - build
