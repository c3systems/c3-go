references:
  c3-buld-image: &c3-buld-image
    circleci/classic:latest

version: 2
jobs:
  build:
    machine:
      # specify the version
      image: *c3-buld-image

    working_directory: /home/circleci/.go_workspace/go/src/github.com/c3systems/c3
    steps:
      - run:
          name: Install Golang
          command: |
            sudo add-apt-repository ppa:gophers/archive
            sudo apt-get update -y
            sudo apt-get install golang-1.10-go -y
            export GOPATH=/home/circleci/.go_workspace
            export PATH=$PATH:$GOPATH/bin
            mkdir -p /home/circleci/.go_workspace/src/github.com/c3systems/c3

      - run: go version

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.03.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin

      - run:
          name: Install IPFS
          command: |
            set -x
            wget https://dist.ipfs.io/go-ipfs/v0.4.14/go-ipfs_v0.4.14_linux-amd64.tar.gz -O /tmp/go-ipfs.tar.gz
            cd /tmp
            tar xvfz go-ipfs.tar.gz
            sudo cp go-ipfs/ipfs /usr/local/bin/

      - run:
          name: Run IPFS daemon
          command: |
            sudo ipfs init
            sudo ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
            sudo ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/9001
            sudo ipfs daemon &

      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Tests
          command: |
            export IP=$(ifconfig | grep inet | grep broad | awk {'print $2'})
            echo "{ \"insecure-registries\": [ \"$IP:5000\" ] }" | sudo tee /etc/docker/daemon.json
            sudo service docker restart
            make test

workflows:
  version: 2
  all:
    jobs:
      - build
